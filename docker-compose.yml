version: "3.8"
services:
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    image: eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"  # Exposing the Eureka port to the host to check the registry
    networks:
      - app-network
    environment:
      - JAVA_OPTS=-Dserver.port=8761

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: api-gateway:latest
    container_name: api-gateway
    ports:
      - "8080:8080"  # Exposing the API Gateway port to the host
    networks:
      - app-network
    depends_on:
      - eureka-server
    environment:
      - JAVA_OPTS=-Dserver.port=8080
      - spring.cloud.discovery.enabled=true
      - spring.cloud.gateway.discovery.locator.enabled=true
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/

  product-quote-service:
    build:
      context: ./product-quote-service
      dockerfile: Dockerfile
    image: product-quote-service:latest
    container_name: product-quote-service
    networks:
      - app-network
    depends_on:
      - eureka-server
    environment:
      - JAVA_OPTS=-Dserver.port=8081
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    image: order-service:latest 
    container_name: order-service
    networks:
      - app-network
    depends_on:
      - eureka-server
    environment:
      - JAVA_OPTS=-Dserver.port=8082
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/

  docgen-service:
    build:
      context: ./docgen-service
      dockerfile: Dockerfile
    image: docgen-service:latest
    container_name: docgen-service
    networks:
      - app-network
    depends_on:
      - eureka-server
    environment:
      - JAVA_OPTS=-Dserver.port=8083
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - /var/jenkins_home/workspace/prometheus-config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"  # Exposing Prometheus UI to Host
    depends_on:
      - api-gateway
      - eureka-server
      - product-quote-service
      - order-service
      - docgen-service
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"  # Exposing Grafana UI to Host
    depends_on:
      - prometheus
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
